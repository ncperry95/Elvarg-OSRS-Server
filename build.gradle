plugins {
    id 'java'
    id 'application'
}

group = 'com.elvarg'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    // JSON
    implementation 'com.google.code.gson:gson:2.11.0'

    // Utilities (optional but handy)
    implementation 'com.google.guava:guava:33.2.1-jre'

    implementation "com.displee:rs-cache-library:6.8.1"

    // Netty – brings in ByteBuf, Channel, NIO transports, handlers, codecs, etc.
    implementation 'io.netty:netty-all:4.1.92.Final'

    implementation 'org.apache.commons:commons-compress:1.26.2'
}

java {
    // Use your installed JDK 23 to build
    toolchain {
        languageVersion = JavaLanguageVersion.of(23)
    }
}

tasks.withType(JavaCompile).configureEach {
    // Generate Java 17 bytecode (original projects are often 8–11; 17 is fine)
    options.release = 17
    options.encoding = 'UTF-8'
    // silence the “source/target 8 is obsolete” nags if any old flags linger
    options.compilerArgs += ['-Xlint:-options']
}

sourceSets {
    main {
        java.srcDirs = ['Elvarg - Server/src']
        resources.srcDirs = ['Elvarg - Server/resources', 'Elvarg - Server/data']
    }
    test {
        java.srcDirs = ['Elvarg - Server/test']
    }
}

application {
    // Normal server entrypoint (if/when you run the game)
    mainClass = 'com.elvarg.Elvarg'
}

// --- XTEA converter runner ---
tasks.register('runConverter', JavaExec) {
    group = "tools"
    description = "Convert OpenRS2 keys.json to Elvarg xteas.json and per-region files"
    dependsOn 'classes'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.elvarg.util.XteaConverter'

    // Feel free to change the arguments/paths:
    args 'https://archive.openrs2.org/keys/valid.json', 'Elvarg - Server/data/xtea'

    doFirst {
        println "\n--- runConverter CLASSPATH ---"
        println classpath.asPath
        println "------------------------------\n"
    }
}
